{
  "manifestVersion": "3.2",
  "proxies": [
    {
      "address": "0x4E9EddA793f5265bD6360F0F9f950Eb821C255e9",
      "kind": "uups"
    },
    {
      "address": "0x8A6aFc7D27cDFf9FDC6b4efa63a757333eB58508",
      "kind": "uups"
    },
    {
      "address": "0x74019d73c9E4d6FE5610C20df6b0FFCe365c4053",
      "txHash": "0xa44076353ad1afeb64c8817a58daeb417ecb7bb52b6d9ec52ea5af50ec3340ac",
      "kind": "uups"
    },
    {
      "address": "0xA95B5650c6D525a8d82E6Ec766d1c6DF7eC0c4e7",
      "txHash": "0xf5c8d72eee7f87657d6ada8c3172affff2537b49e391f64362298dbc71212919",
      "kind": "uups"
    },
    {
      "address": "0x1cddE3BB0DaF9Def56F7e5e5B8BfDFd6689160A7",
      "txHash": "0xd7fe5c9439d934679ec72eb7ab294972e3edda5bd25182bf7e08779f643f3db7",
      "kind": "uups"
    },
    {
      "address": "0x774029863759eEd41B6f7Fe12dc5D44Ec9eD4bCB",
      "kind": "uups"
    },
    {
      "address": "0x2be6B3045A772A9C3EcC776450D09e06040F8ED7",
      "kind": "uups"
    }
  ],
  "impls": {
    "4280a9f4e2ef6b405ef8df1aa5b8a0fee87836cb807da11a106cdef502c430bc": {
      "address": "0x1F0E91967Ff937d938a5594CC7B7996568c24825",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:26"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)5674",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:27"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:28"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)5705_storage)",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:37"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:39"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV2",
            "src": "contracts/PurseStakingV2.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)5674": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)5705_storage)": {
            "label": "mapping(address => struct PurseStakingV2.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)5705_storage": {
            "label": "struct PurseStakingV2.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              }
            ],
            "numberOfBytes": "128"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "9e825823270962230aa7863171f95401a5423eb882e467fd1ac56ea8724cee63": {
      "address": "0xF9750Aa14AB3D89b7E9052d609b7f73E3D81245c",
      "txHash": "0x5cd015dc3447a814966c3c6ae3ba69e2e14d1c3e75ad2734e1ee30bb8302e63d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:29"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)9516",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:30"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:31"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)9551_storage)",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:42"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:44"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:45"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:47"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:49"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)9516": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)9551_storage)": {
            "label": "mapping(address => struct PurseStakingV3.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)9551_storage": {
            "label": "struct PurseStakingV3.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      },
      "allAddresses": [
        "0xF9750Aa14AB3D89b7E9052d609b7f73E3D81245c",
        "0xD3147c184C3e7524C45fc1253ddd5C14931bb675"
      ]
    },
    "fbe66a5effbd4cefa703b547b6231b2c1023707efaec91e3c4d50dd3892ed706": {
      "address": "0xC93c02D9783f42A6c51831526e86979a68127585",
      "txHash": "0x92e19562549d9e1ae5a9211979773f4464337ff55b4f15bc0bb18756f1524c48",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "6c611d2c0f9d6b8079e499fd553b42fcbb124faca04eaa48ff7f5cc22a1eab75": {
      "address": "0x46b7Ba6f6E6eA92FD3ca64FFefEDFeAB6C0AA994",
      "txHash": "0xe69d59799de44c59ff67e580d28b6ba3b8dc238cb2bf805a1a888e2c324a9d48",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11850_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11850_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11850_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11850_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "762383fdee8d7a32989293dc9d4d195fa2307b1bba3c6cebc3820415c949348d": {
      "address": "0x01E9Ebd46113E0aC7D04Eb347AfB379BdB1DF1F6",
      "txHash": "0xeaecd88c07d57b88db318f408a3e4e4e22b0fa35651356fa92d2d91305f6b274",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "51",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "52",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "201",
            "type": "t_address",
            "contract": "StakePurseVaultTreasury",
            "src": "contracts/vaults/StakePurseVaultTreasury.sol:18"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "6ad70a52fe097e417e292ef6633d0ecb7f1a7630f54c19b68b629a8d2c6d9e1f": {
      "address": "0x8C329382BDbA4052652b9DC51D336Aa1F83b6733",
      "txHash": "0x874e2241ae523bd167f81f0483fe59bf28b7504aa0db0dfc7cd945438bcce95b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:27"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:32"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:35"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:37"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:41"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17261_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:44"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17266_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17266_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17266_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17261_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "8925e09b7a94a3c2483cc6b9d0c1015d1284a5f0b4280e2a18081aa304b3503f": {
      "address": "0xF4FBBe88029B433E181ceAB3C996F7f767ed3e00",
      "txHash": "0x30eafd2b66a1630404d2cf5874a8d4eba741697384eb0816d7d3b9dbcf1a4ec5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakePurseVault",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:22"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:23"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)18825_storage)dyn_storage)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:34"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:37"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)18825_storage)dyn_storage": {
            "label": "struct StakePurseVaultVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)18825_storage)dyn_storage)": {
            "label": "mapping(address => struct StakePurseVaultVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)18825_storage": {
            "label": "struct StakePurseVaultVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "73fafe186ac1669a888f4d619b0c7ec332b42659efa03623d021d8b01d5f4fe0": {
      "address": "0x56d3FDbBa63391355f01A40A63355829217d3b4a",
      "txHash": "0x4f3f3575efbb43e5da1b8a4e07dd36eb781ac918d410524514131823933de905",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:27"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:32"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:35"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:37"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:41"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17261_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:44"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17266_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17266_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17266_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17261_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3ce3ba547b59201b22fb0c0053cdaafca2e91f1019a1f030a98cd3f85611381c": {
      "address": "0xB97887ac2a5662c4209a72ABd1107c163886A9f1",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:19"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "Treasury",
            "src": "contracts/Treasury.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "db380b93a5ffb88994daf413d02d9666b0698325cf5cb64c46dcfa5e08c4c121": {
      "address": "0x216eB8B6526ac0056F3c46680b0c6D5dF84A3ABE",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:27"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:32"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:35"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:37"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:41"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17592_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:44"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17597_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17597_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17597_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17592_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "aee904be305719c9af7c643352475717317baff8e010dc88d25f03e90597fe41": {
      "address": "0xE46d6F9A157838670Ef98f41F4Db5cf504f77131",
      "txHash": "0xca9cb7fd44f718490b6a5b915602e8ef70813db0b60522fc7f41cb45fe8a7fdd",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:27"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:32"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:35"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:37"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:41"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17592_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:44"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17597_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17597_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17597_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17592_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5903a210221be0b90fba455296e1e3af3ce629ebcb69efba3ff763b302b48305": {
      "address": "0xDCe83fda8ac2bB0E7Ae6aF9F62C6A38eB009762d",
      "txHash": "0x13c391ff456fc5d294afadcbf8e72cb4703f57e5706bdfd7851ec9d064af8f0d",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:19"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "b331c6c7071c5a8aee19f62a2ed43f5ae059a7313e7d39d038274c6b76b30274": {
      "address": "0x7334FE3964AF5872000ACb5399f74F22DaAeD0eC",
      "txHash": "0x656e15de58afbb20dedd3f51ec54f063a06225703da239935ea8e19cd799c426",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:19"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:20"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "ab283398f3d7f263767fd9a233c72a0065c8d045b1d4db28c296f862cd571bd8": {
      "address": "0xb07832739816d28ADF28Df85cAEa25B777eD9922",
      "txHash": "0xe1f172ef0a769128469c5305c929e06ccd0eeb18fef947d73c4af77ad168dc8c",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:27"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:32"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:35"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:37"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:41"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17537_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:44"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17542_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17542_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17542_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17537_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "9ee6c4a0d930dbe79a4b5b09e0bc088ed7051b69a37f04084313c046fd02906d": {
      "address": "0xb9C7B52F8be4fc976325595158A2533F918E1706",
      "txHash": "0x2f5bc1b1ae1abefc645471b3b97ca419752e36a88228df2485952f04c055f5a9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:20"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "14a4c15abec4c0becc5731851f45bab9d6197db6a3a931337a3f1e710d6866c3": {
      "address": "0x92804C5BfC37C471fb52AF874f1BF2dCF067703D",
      "txHash": "0x1ee5a53c4f4b3e51ad81b0535217aedff3c33427d3fcb1cf74e5bc48815387f5",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11815_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11815_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5c0256f31dd9803ea9279b70cc5585461e356e2254b2e4083985eb2020e75d0b": {
      "address": "0x29c055B7A5435a7Bb35247C203c5f753d3195355",
      "txHash": "0x6d0ed4a5e9d6edb928bff6208466e804ce0001abde5e5ca4d71104d4f01830d9",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11843_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11843_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11843_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11843_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "d947239ed67d4ece9eceb59525d899538b98544827f2a7cbd2d78fe56a06f133": {
      "address": "0xBE1770C3eF017e52D3e5dE4cc3c1d7c2Ba2A0E61",
      "txHash": "0xb4c74a5cda6fcbb9ff0149fe8fc68d27e3959047b7281004839f3e2375f027f0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11815_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11815_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "231c63eeac5972ef43287a30d1ee4b680d8d8febd5ac8ebd9aa1ad31f17634ff": {
      "address": "0x883153E7946a4C82CcdbCbb10A5a9077718dB30D",
      "txHash": "0xce868b4a730b3130676b2f644c01a80e6c5b7ede9543d316ed5b3f8ee4834429",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "659fb5fe47188cb0bf035af8cc6c3060416cd7a40f1f494e25815744bc109ee1": {
      "address": "0xf8B7e4f8A007D310bf5Dd3430B02d0586Fa31688",
      "txHash": "0x789bbac542341ede26a556c626ab98b64b36cd28f9d83cbee6f6f8a0eab8cb0e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11815_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11815_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11815_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "7316b247825a6d0a9096fc9586237690db2b400e90cca4a5f1a2047d8e690d7c": {
      "address": "0x1e85Ab212Dcf114C2A0cac8dD688512DD1e468CC",
      "txHash": "0xfaa10e7508453dd2828f7211263dd28c3071aca291cb7b69b4ebd051c9cfaefb",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17556_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17561_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17561_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17561_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17556_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e84089c7c383b97411df4b2523819dd51b9ebaeab5c796ec9142a7220485a582": {
      "address": "0xA0839bD5b99a541cC1721ae5FB5cb27C560562fA",
      "txHash": "0xd32fcaaebe82dbe83e85cebe39746759ef4b7626c161ca95b80c1d4acbe9b76a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:29"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)9516",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:30"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:31"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)9551_storage)",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:42"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:44"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:45"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:47"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:48"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:49"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3",
            "src": "contracts/PurseStakingV3.sol:50"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)9516": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)9551_storage)": {
            "label": "mapping(address => struct PurseStakingV3.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)9551_storage": {
            "label": "struct PurseStakingV3.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "e8fc2e51a02159dd0a358b963b085a7872a8a16c5edff9be3405b6afa050bf8f": {
      "address": "0x0045dE3C8e4f258cA00511d35880b9209B805aBE",
      "txHash": "0x38d5cbe4198dc5f2fabc5f3d629cfd59b4da8eda27c1875023716aae257e8094",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "4aadd5dc551345c4dd29e4f4173f0a72ee3a22f281c02a8db581a2c682fae826": {
      "address": "0x517F5D071a674DD6F0C530E36e4627b5b7A5ac14",
      "txHash": "0xe53af65be52a88b93c1c7757cf7f4a788c2eef64fe416b7c8bef6b2a2f5da000",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:20"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "e2e3cbd0b6796ab5678798c93f5a5e4b97aa21611047643e5970c6ded7e71379": {
      "address": "0x93EE2DC95B27d4AE5e0BF5Cfd542B10D5CaaD279",
      "txHash": "0xbb2fc82ca467f997873aae6b57d89a87bdf0d7d633cb0c92e4980e336f97675b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "d99183e596c1726cb7148c278be8f0b40314d36338d1cc90caa843722ee3837b": {
      "address": "0x52DDB450239ecF0299d9a6C44518835898c9b5B0",
      "txHash": "0x0e378c886ae7a6802635b3a092d6731d1a2c0d25077eff7336306bc97de65c8b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "PURSE_STAKING",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:20"
          },
          {
            "label": "DISTRIBUTOR",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "TreasuryV2",
            "src": "contracts/TreasuryV2.sol:21"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "f88f6a8f759b8fa061acd9d6ed139d850e492f19f45ff27567225a9b36a2a118": {
      "address": "0xEC33709f816b6FB905c8B292975Bb7EAd87Fdd79",
      "txHash": "0x389c37214ac1a4995377432165ccbf352773f48e4c9bc3fbf1041c600b655bf6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:21"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "252",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)11863_storage)dyn_storage)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:32"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:35"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "PurseStakingVesting",
            "src": "contracts/PurseStakingVesting.sol:38"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)11863_storage)dyn_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)11863_storage)dyn_storage)": {
            "label": "mapping(address => struct PurseStakingVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)11863_storage": {
            "label": "struct PurseStakingVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3d703a9de33e06674ac37b53aea89c62f6061b5c222563834495b510ad5e3ed9": {
      "address": "0xaB9fAE1EE6A5E51c80f93ad276ee3F9d219c8437",
      "txHash": "0xa2ffa211cc0d33481a4cd663a49caeccbd88fd232eb89372de962a63e002151a",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17532_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17537_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17537_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17537_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17532_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "3b31e128a77b1d18c950480841ff28bf7fa087e0ebe1edd53cd300329aebd8ff": {
      "address": "0x7E1EB29B40e410453E94C7FAbB1604425B74b4C1",
      "txHash": "0x4286c23126be669170ff198d602819126ecbba1230ac4fcc23b611492bba88da",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17532_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17537_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17537_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17537_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17532_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "e31ef724ea5d0f84b1b6b74acdd5b6bfef4d9813361e41e87653b038136c9226": {
      "address": "0x7e463c10591033f19aDcB413025b47266497cB95",
      "txHash": "0x371af6ef96c7675d6c3f4a69e0b07f04d12d4f7f61370b4d1fd76b8d6796cb5e",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:94"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "201",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "stakePurseVault",
            "offset": 0,
            "slot": "251",
            "type": "t_address",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:22"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "252",
            "type": "t_address",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:23"
          },
          {
            "label": "accountVestingSchedules",
            "offset": 0,
            "slot": "253",
            "type": "t_mapping(t_address,t_array(t_struct(VestingSchedule)18824_storage)dyn_storage)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:34"
          },
          {
            "label": "accountEscrowedBalance",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:37"
          },
          {
            "label": "accountVestedBalance",
            "offset": 0,
            "slot": "255",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "StakePurseVaultVesting",
            "src": "contracts/vaults/StakePurseVaultVesting.sol:40"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_struct(VestingSchedule)18824_storage)dyn_storage": {
            "label": "struct StakePurseVaultVesting.VestingSchedule[]",
            "numberOfBytes": "32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_mapping(t_address,t_array(t_struct(VestingSchedule)18824_storage)dyn_storage)": {
            "label": "mapping(address => struct StakePurseVaultVesting.VestingSchedule[])",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_struct(VestingSchedule)18824_storage": {
            "label": "struct StakePurseVaultVesting.VestingSchedule",
            "members": [
              {
                "label": "startTime",
                "type": "t_uint128",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "endTime",
                "type": "t_uint128",
                "offset": 16,
                "slot": "0"
              },
              {
                "label": "quantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "vestedQuantity",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              }
            ],
            "numberOfBytes": "96"
          },
          "t_uint128": {
            "label": "uint128",
            "numberOfBytes": "16"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "41b21dd5d5524ded24f27bc50074d16db95bf72be22b2257b76254cf8da775b5": {
      "address": "0x73151cF3D272E99F898fE23A302115906c98bd77",
      "txHash": "0x495169ebfde91fa0c04d15c2d6240ef0b73ddd3e4af26ae371e4f559955ff7b0",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17532_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17537_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17537_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17537_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17532_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "779498dc5b3f3fd89896a50dac46505911cfe19e63e6e7c3c8db6eefe3e51ab2": {
      "address": "0xc3412a582A63f9Cf90Da4798236EFD03Ca2Cd586",
      "txHash": "0xaa9ffa271afe183af5642f43ddcc08208ed8860b1f8aa39d9f2ea19a0fc5f48b",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "e4f99e1cf3331e86d93576162c576c53c1479547575ddb9f378d2d0ad871d4d6": {
      "address": "0xCfe98497DD2BC7df8BBacBf7Ee348B3F07166648",
      "txHash": "0xa6541df26fcb9d7d0c443145cedd1ee19b19cffce65743926c84aa3e4e2f6ea6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17532_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17537_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17537_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17537_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17532_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "5816345eabb8cbeb6d3b4dbd9af25f2d37baff45ebae33a95a2a1f77a14ba7aa": {
      "address": "0xCD763175274d393380Bad16e7F898E585812EEf1",
      "txHash": "0x9a24a5f774cbb03e235ecb5abb7c36b034cd243910316ecf74a611e268aef979",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:39"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:44"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:211"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:107"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "101",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "_owner",
            "offset": 0,
            "slot": "151",
            "type": "t_address",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:22"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "152",
            "type": "t_array(t_uint256)49_storage",
            "contract": "OwnableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/access/OwnableUpgradeable.sol:87"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "201",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "202",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "contracts/@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:102"
          },
          {
            "label": "name",
            "offset": 0,
            "slot": "251",
            "type": "t_string_storage",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:30"
          },
          {
            "label": "purseToken",
            "offset": 0,
            "slot": "252",
            "type": "t_contract(IPurseToken)10663",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:31"
          },
          {
            "label": "_totalReceiptSupply",
            "offset": 0,
            "slot": "253",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:32"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "254",
            "type": "t_mapping(t_address,t_struct(UserInfo)10698_storage)",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:43"
          },
          {
            "label": "_totalLockedAmount",
            "offset": 0,
            "slot": "255",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:45"
          },
          {
            "label": "lockPeriod",
            "offset": 0,
            "slot": "256",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:46"
          },
          {
            "label": "cumulativeRewardPerToken",
            "offset": 0,
            "slot": "257",
            "type": "t_uint256",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:48"
          },
          {
            "label": "distributor",
            "offset": 0,
            "slot": "258",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:49"
          },
          {
            "label": "treasury",
            "offset": 0,
            "slot": "259",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:50"
          },
          {
            "label": "vesting",
            "offset": 0,
            "slot": "260",
            "type": "t_address",
            "contract": "PurseStakingV3v",
            "src": "contracts/PurseStakingV3v.sol:51"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_contract(IPurseToken)10663": {
            "label": "contract IPurseToken",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_struct(UserInfo)10698_storage)": {
            "label": "mapping(address => struct PurseStakingV3v.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(UserInfo)10698_storage": {
            "label": "struct PurseStakingV3v.UserInfo",
            "members": [
              {
                "label": "receiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "newReceiptToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "withdrawReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "lockTime",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "5"
              }
            ],
            "numberOfBytes": "192"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          }
        },
        "namespaces": {}
      }
    },
    "ad704fe44af195209368e48418399f0fc6bde88d7eaa5157bf62467ffd4c3ba2": {
      "address": "0x42f45D2AF35ae1375c7D3d44a841BFb15C66A432",
      "txHash": "0x75f7e6231005b50aa910071f5c4ecb01969952f30b6e8eb1313ed0479a68b216",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17539_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17544_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17544_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17544_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17539_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "0ba43c27971de1318153d145505d449b76bfc5272960967baa552cfa6b68e3ad": {
      "address": "0xe1F3Fc6eFb019671948f753ECb51Ad1DFfdF9905",
      "txHash": "0xfab4367c804fb9ec32938fcb73f316f389d32fb62087754ec6314d16dfbb67b6",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:122"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17539_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17544_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17544_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17544_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17539_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    },
    "87bd0f5bc71024a089eac1beb43cc8f7e654d56cd6ea97896616d907eb0d83b3": {
      "address": "0xCD134961aaaf36e43f992CB0c95BcfAa09b3b57A",
      "txHash": "0x70572e0d6ac153c36a796b2034b90c38fe0fea3e5db93391b8e190532b9a05f3",
      "layout": {
        "solcVersion": "0.8.18",
        "storage": [
          {
            "label": "_initialized",
            "offset": 0,
            "slot": "0",
            "type": "t_uint8",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:63",
            "retypedFrom": "bool"
          },
          {
            "label": "_initializing",
            "offset": 1,
            "slot": "0",
            "type": "t_bool",
            "contract": "Initializable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol:68"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC1967UpgradeUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/ERC1967/ERC1967UpgradeUpgradeable.sol:169"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "51",
            "type": "t_array(t_uint256)50_storage",
            "contract": "UUPSUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol:111"
          },
          {
            "label": "_status",
            "offset": 0,
            "slot": "101",
            "type": "t_uint256",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "102",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ReentrancyGuardUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/ReentrancyGuardUpgradeable.sol:88"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "151",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ContextUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol:36"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "201",
            "type": "t_array(t_uint256)50_storage",
            "contract": "ERC165Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol:41"
          },
          {
            "label": "_roles",
            "offset": 0,
            "slot": "251",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:62"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "252",
            "type": "t_array(t_uint256)49_storage",
            "contract": "AccessControlUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol:260"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "301",
            "type": "t_array(t_uint256)49_storage",
            "contract": "Governable",
            "src": "contracts/Governable.sol:27"
          },
          {
            "label": "_paused",
            "offset": 0,
            "slot": "350",
            "type": "t_bool",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:29"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "351",
            "type": "t_array(t_uint256)49_storage",
            "contract": "PausableUpgradeable",
            "src": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:116"
          },
          {
            "label": "_balances",
            "offset": 0,
            "slot": "400",
            "type": "t_mapping(t_address,t_uint256)",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:40"
          },
          {
            "label": "_allowances",
            "offset": 0,
            "slot": "401",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:42"
          },
          {
            "label": "_totalSupply",
            "offset": 0,
            "slot": "402",
            "type": "t_uint256",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:44"
          },
          {
            "label": "_name",
            "offset": 0,
            "slot": "403",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:46"
          },
          {
            "label": "_symbol",
            "offset": 0,
            "slot": "404",
            "type": "t_string_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:47"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "405",
            "type": "t_array(t_uint256)45_storage",
            "contract": "ERC20Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol:376"
          },
          {
            "label": "_asset",
            "offset": 0,
            "slot": "450",
            "type": "t_contract(IERC20Upgradeable)2279",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:54"
          },
          {
            "label": "_underlyingDecimals",
            "offset": 20,
            "slot": "450",
            "type": "t_uint8",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:55"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "451",
            "type": "t_array(t_uint256)49_storage",
            "contract": "ERC4626Upgradeable",
            "src": "@openzeppelin/contracts-upgradeable/token/ERC20/extensions/ERC4626Upgradeable.sol:267"
          },
          {
            "label": "__gap",
            "offset": 0,
            "slot": "500",
            "type": "t_array(t_uint256)49_storage",
            "contract": "BaseVault",
            "src": "contracts/vaults/BaseVault.sol:126"
          },
          {
            "label": "vestDuration",
            "offset": 0,
            "slot": "549",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:28"
          },
          {
            "label": "stakePurseVaultVesting",
            "offset": 0,
            "slot": "550",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:29"
          },
          {
            "label": "stakePurseVaultTreasury",
            "offset": 0,
            "slot": "551",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:30"
          },
          {
            "label": "vaultRewardDistributor",
            "offset": 0,
            "slot": "552",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:31"
          },
          {
            "label": "purseStaking",
            "offset": 0,
            "slot": "553",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:33"
          },
          {
            "label": "purseStakingTreasury",
            "offset": 0,
            "slot": "554",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:34"
          },
          {
            "label": "pendingPurseRewards",
            "offset": 0,
            "slot": "555",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:36"
          },
          {
            "label": "feeOnReward",
            "offset": 0,
            "slot": "556",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:38"
          },
          {
            "label": "feeOnCompounder",
            "offset": 0,
            "slot": "557",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:39"
          },
          {
            "label": "feeOnWithdrawal",
            "offset": 0,
            "slot": "558",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:40"
          },
          {
            "label": "MIN_COMPOUND_AMOUNT",
            "offset": 0,
            "slot": "559",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:42"
          },
          {
            "label": "CAP_STAKE_PURSE_TARGET",
            "offset": 0,
            "slot": "560",
            "type": "t_uint256",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:43"
          },
          {
            "label": "vaultInfo",
            "offset": 0,
            "slot": "561",
            "type": "t_struct(VaultInfo)17543_storage",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:45"
          },
          {
            "label": "userInfo",
            "offset": 0,
            "slot": "566",
            "type": "t_mapping(t_address,t_struct(UserInfo)17548_storage)",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:46"
          },
          {
            "label": "purseStakingVesting",
            "offset": 0,
            "slot": "567",
            "type": "t_address",
            "contract": "StakePurseVault",
            "src": "contracts/vaults/StakePurseVault.sol:61"
          }
        ],
        "types": {
          "t_address": {
            "label": "address",
            "numberOfBytes": "20"
          },
          "t_array(t_uint256)45_storage": {
            "label": "uint256[45]",
            "numberOfBytes": "1440"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]",
            "numberOfBytes": "1568"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]",
            "numberOfBytes": "1600"
          },
          "t_bool": {
            "label": "bool",
            "numberOfBytes": "1"
          },
          "t_bytes32": {
            "label": "bytes32",
            "numberOfBytes": "32"
          },
          "t_contract(IERC20Upgradeable)2279": {
            "label": "contract IERC20Upgradeable",
            "numberOfBytes": "20"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_struct(UserInfo)17548_storage)": {
            "label": "mapping(address => struct StakePurseVault.UserInfo)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)",
            "numberOfBytes": "32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)",
            "numberOfBytes": "32"
          },
          "t_string_storage": {
            "label": "string",
            "numberOfBytes": "32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(UserInfo)17548_storage": {
            "label": "struct StakePurseVault.UserInfo",
            "members": [
              {
                "label": "claimableReward",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "previousCumulatedRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              }
            ],
            "numberOfBytes": "64"
          },
          "t_struct(VaultInfo)17543_storage": {
            "label": "struct StakePurseVault.VaultInfo",
            "members": [
              {
                "label": "stakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "0"
              },
              {
                "label": "unstakeId",
                "type": "t_uint256",
                "offset": 0,
                "slot": "1"
              },
              {
                "label": "length",
                "type": "t_uint256",
                "offset": 0,
                "slot": "2"
              },
              {
                "label": "totalAllocPoint",
                "type": "t_uint256",
                "offset": 0,
                "slot": "3"
              },
              {
                "label": "cumulativeRewardPerToken",
                "type": "t_uint256",
                "offset": 0,
                "slot": "4"
              }
            ],
            "numberOfBytes": "160"
          },
          "t_uint256": {
            "label": "uint256",
            "numberOfBytes": "32"
          },
          "t_uint8": {
            "label": "uint8",
            "numberOfBytes": "1"
          }
        },
        "namespaces": {}
      }
    }
  }
}
